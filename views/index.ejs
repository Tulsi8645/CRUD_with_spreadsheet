<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>User Message</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      margin: 20px;
    }
    form {
      max-width: 400px;
      margin: auto;
      padding: 20px;
      border: 1px solid #ddd;
      border-radius: 8px;
      background-color: #f9f9f9;
    }
    div {
      margin-bottom: 15px;
    }
    label {
      display: block;
      margin-bottom: 5px;
      font-weight: bold;
    }
    input[type="text"] {
      width: 100%;
      padding: 8px;
      box-sizing: border-box;
    }
    button {
      padding: 10px 15px;
      background-color: #007bff;
      color: #fff;
      border: none;
      border-radius: 5px;
      cursor: pointer;
    }
    button:hover {
      background-color: #0056b3;
    }
    .link {
      display: block;
      text-align: center;
      margin-top: 20px;
      color: #007bff;
      text-decoration: none;
    }
    .link:hover {
      text-decoration: underline;
    }
  </style>
  <script>
    // Function to handle form submission
    async function handleSubmit(event) {
      event.preventDefault(); // Prevent the default form submission

      const form = event.target;
      const formData = new FormData(form);

      const data = {
        rowNumber: formData.get('rowNumber'), // Check for rowNumber as the primary key
        username: formData.get('username'),
        email: formData.get('email'),
        message: formData.get('message'),
        image: formData.get('image'),
      };

      // Determine if it's a new entry (POST) or an update (PUT) based on rowNumber
      const method = data.rowNumber ? 'PUT' : 'POST';
      const endpoint = data.rowNumber ? `/api/submit/${data.rowNumber}` : '/api/submit';

      try {
        const response = await fetch(endpoint, {
          method: method,
          body: JSON.stringify(data),
          headers: {
            'Accept': 'application/json',
            'Content-Type': 'application/json',
          }
        });

        if (!response.ok) {
          throw new Error('Network response was not ok');
        }

        const result = await response.json();
        alert(result.message);
        form.reset();
        window.location.href = '/data'; // Redirect to data view page
      } catch (error) {
        console.error('An error occurred:', error);
        alert('An error occurred. Please try again.');
      }
    }

    // Function to load data for editing
    async function loadDataForEdit() {
      const queryParams = new URLSearchParams(window.location.search);
      const rowNumber = queryParams.get('rowNumber'); // Get rowNumber from query string

      if (rowNumber) {
        try {
          const response = await fetch(`/api/data/${rowNumber}`);
          const data = await response.json();

          // Populate form fields
          document.getElementById('rowNumber').value = rowNumber; // Set rowNumber in the form
          document.getElementById('username').value = data[0];
          document.getElementById('email').value = data[1];
          document.getElementById('message').value = data[2];
          document.getElementById('image').value = data[3];
          document.getElementById('submit-button').textContent = 'Update'; // Change button text
        } catch (error) {
          console.error('An error occurred while loading data:', error);
          alert('An error occurred while loading data.');
        }
      }
    }

    // Load data if editing
    window.onload = loadDataForEdit;
  </script>
</head>
<body>
  <h1>User Message</h1>
  <form onsubmit="handleSubmit(event)">
    <input type="hidden" id="rowNumber" name="rowNumber" /> <!-- Hidden input for row number -->
    
    <div>
      <label for="username">Username</label>
      <input type="text" id="username" name="username" required />
    </div>
    
    <div>
      <label for="email">Email</label>
      <input type="text" id="email" name="email" required />
    </div>
    
    <div>
      <label for="message">Message</label>
      <input type="text" id="message" name="message" required />
    </div>
    
    <div>
      <label for="image">Image URL</label>
      <input type="text" id="image" name="image" required />
    </div>
    
    <button type="submit" id="submit-button">Submit</button>
  </form>

  <a class="link" href="/data">View Submitted Data</a>
</body>
</html>
