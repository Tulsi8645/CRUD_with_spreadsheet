<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Data View</title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
  <style>
    body {
      font-family: Arial, sans-serif;
      margin: 0;
      padding: 20px;
      background-color: #f4f4f4;
    }
    .container {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
      gap: 20px;
      padding: 10px;
    }
    .card {
      position: relative;
      border: 1px solid #ddd;
      border-radius: 8px;
      background: #fff;
      overflow: hidden;
      box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
      transition: transform 0.2s, box-shadow 0.2s;
    }
    .card:hover {
      transform: translateY(-5px);
      box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
    }
    .card img {
      width: 100%;
      height: 200px;
      object-fit: cover;
    }
    .card-content {
      padding: 15px;
    }
    .card-content h3 {
      margin: 0 0 10px 0;
      font-size: 1.5em;
    }
    .card-content p {
      margin: 0;
      color: #666;
    }
    .card-actions {
      position: absolute;
      bottom: 10px;
      right: 10px;
    }
    .card-actions i {
      margin-left: 15px;
      cursor: pointer;
      color: #333;
      transition: color 0.2s;
    }
    .card-actions i:hover {
      color: #007bff;
    }
    @media (max-width: 600px) {
      .card-actions i {
        margin-left: 10px;
      }
    }
    .no-data {
      text-align: center;
      color: #777;
      font-size: 1.2em;
      margin-top: 50px;
    }
  </style>
</head>
<body>
  <h1>Submitted Data</h1>
  <div class="container" id="cards-container">
    <!-- Cards will be dynamically inserted here -->
  </div>

  <script>
    // Function to fetch and display all entries
    async function fetchEntries() {
      try {
        const response = await fetch('/api/data');
        if (!response.ok) {
          throw new Error('Network response was not ok');
        }
        const data = await response.json();
        
        const container = document.getElementById('cards-container');
        container.innerHTML = ''; // Clear existing content
        
        if (data.length <= 1) { // No data or only header row
          container.innerHTML = '<p class="no-data">No entries found.</p>';
          return;
        }
        
        // Skip the first row (header)
        data.slice(1).forEach((row, index) => {
          const card = document.createElement('div');
          card.className = 'card';
          card.innerHTML = `
            <img src="${row[3]}" alt="User Image">
            <div class="card-content">
              <h3>${row[0]}</h3>
              <p><strong>Email:</strong> ${row[1]}</p>
              <p><strong>Message:</strong> ${row[2]}</p>
            </div>
            <div class="card-actions">
              <i class="fas fa-pen" onclick="editEntry(${index + 1})" title="Edit"></i>
              <i class="fas fa-trash" onclick="deleteEntry(${index + 1})" title="Delete"></i>
            </div>
          `;
          container.appendChild(card);
        });
      } catch (error) {
        console.error('Error fetching entries:', error);
        alert('Failed to load entries. Please try again later.');
      }
    }

    function editEntry(rowNumber) {
      window.location.href = `/?rowNumber=${rowNumber}`;
    }

    async function deleteEntry(rowNumber) {
      if (confirm('Are you sure you want to delete this entry?')) {
        try {
          const response = await fetch(`/api/data/${rowNumber}`, {
            method: 'DELETE'
          });

          if (response.ok) {
            alert('Entry deleted successfully.');
            fetchEntries(); // Refresh the list
          } else {
            alert('Failed to delete the entry.');
          }
        } catch (error) {
          console.error('Error occurred while deleting the entry:', error);
          alert('An error occurred while deleting the entry.');
        }
      }
    }

    // Fetch entries when the page loads
    window.onload = fetchEntries;
  </script>
</body>
</html>
